- content_for(:title, "Craft a tour on Tourmega")
= javascript_include_tag 'gmap_autocomplete'
- @url = tour.new_record? ? tours_path : update_profile_tour_path(tour)

.row
  .small-12.columns
    .headline.text-center
      %h1.h3 Letâ€™s create an awesome megatour together!
      %h5 First, please give us some basic information regarding your megatour.
    .step-panel
      = simple_form_for(tour, url: @url, html: { class: 'new_tour' }) do |f|
        .panel-container
          .field.row.display-table
            .medium-7.columns.table-cell
              %label What should this tour be called?
              .input-box
                = f.input :name, label: false, input_html: { placeholder: 'Name your megatour' }
            .medium-5.columns.field-guide.table-cell.space-3
              %p A catchy name should tell travelers about the unique experience and location, but also be as short as possible.

          .field.row.display-table
            .medium-7.columns.table-cell
              %label Where is your tour based at?
              .input-box
                = f.input :locate_location, as: :fake, input_html: { placeholder: 'Type the address to choose', class: 'autocomplete-location', autocomplete: 'off', 'fill-to-input' => 'tour_location', value: f.object.location.try(:address) }, label: false
                = f.input :location, as: :fake, input_html: { name: 'tour[location]', id: 'tour_location', class: 'hidden', value: f.object.location.try(:hash_attributes) }, label: false, wrapper: false, required: false
            .medium-5.columns.field-guide.table-cell.space-3
              %p Choose as details as possible the location within your tour

          .field.row.display-table
            .medium-7.columns.table-cell
              %label Where do you pickup participants?
              .input-box
                = f.input :locate_pickup_address, as: :fake, input_html: { placeholder: 'Type the address to choose', class: 'autocomplete-location', autocomplete: 'off', 'fill-to-input' => 'tour_pickup_address', value: f.object.pickup_address.try(:address) }, label: false
                = f.input :pickup_address, as: :fake, input_html: { name: 'tour[pickup_address]', id: 'tour_pickup_address', class: 'hidden', value: f.object.pickup_address.try(:hash_attributes) }, label: false, wrapper: false, required: false
            .medium-5.columns.field-guide.table-cell.space-3
              %p Choose as details as possible the location that you will pickup travellers

          .field.row
            .medium-8.column
              %label
                What is it about?
              %p.field-desc
              .categories.select-icons
                #category_ids.hidden
                %ul.id_categories.small-block-grid-3.medium-block-grid-3.large-block-grid-6
                  - Category.find_each do |category|
                    %li
                      %div.icon-category{:class => ('active' if tour.categories.include?(category)), name: category.id}
                        = render "resources/svg/categories/#{category.symbol}"
                      %label= category.name.titleize            
        .row
          .small-12.medium-4.medium-push-8.columns.text-right
            = f.button :submit, 'Next step', class: 'button ladda-button', 'data-style' => 'expand-right', 'data-color' => 'mint'


= include_gmap('initAutocomplete')

:javascript
  $(function(){
    $('form').keydown(function (e) {
      if (e.which == 13)
        return false;
    });

    $('.icon-category').on('click', function(){
      var $this = $(this);
      if ($this.hasClass('active')) {
        $this.removeClass('active');
      }
      else{
        $this.addClass('active');
      }
      updateCategoryIds($this.attr('name'));
    });
  });

  function updateCategoryIds(category_id){
    $element = $('#category_ids');
    if ($element.find("input[value='" + category_id + "']").length > 0) {
      $element.find("input[value='" + category_id + "']").remove();
    }
    else {
      $element.append("<input type='text' name='tour[category_ids][]' value='" + category_id + "'>");
    }
  }
